name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.24

    - name: Go fmt
      run: test -z "$(gofmt -l .)" || (echo "Código não formatado"; exit 1)

    - name: Go vet
      run: go vet ./...

    - name: Verify go dependencies
      run: |
        go mod tidy
        git diff --exit-code || (echo "go.mod ou go.sum estão desatualizados"; exit 1)

    - name: Go Build
      run: go build -v ./...

    - name: Go Test
      run: go test -v ./...
    
    - name: Generate docker tag
      id: generate_tag 
      run: |
         SHA=$(echo $GITHUB_SHA | head -c7)
         echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: AWS - Config Credential
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_LOGIN_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
 
    - name: AWS - Login ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
        
    - name: Docker - Build and push
      id: build-docker-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}
      run: |
        docker build -t $REGISTRY/rocketseat-ci:$TAG .
        docker tag -t $REGISTRY/rocketseat-ci:$TAG $REGISTRY/rocketseat-ci:latest
        docker push --all-tags $REGISTRY/rocketseat-ci
        IMAGE=$(echo $REGISTRY/rocketseat-ci:$TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT

    - name: Deploy
      id: deploy-app-runner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        service: ${{ vars.SERVICE_NAME }}
        image: ${{ steps.build-docker-image.outputs.image }}
        access-role-arn: ${{ secrets.AWS_APP_RUNNER_ROLE }}
        region: ${{ secrets.AWS_REGION }}
        cpu: 1
        memory: 2
        port: 3000
        wait-for-service-stability-seconds: 180

    - name: App Runner check
      run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service-url }}"
